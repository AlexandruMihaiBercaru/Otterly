@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            @{
                var currentUser = await UserManager.GetUserAsync(User);
            }

            @* Display Hello with FirstName and LastName if they exist *@
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hello,
                @if (!string.IsNullOrEmpty(currentUser.FirstName) && !string.IsNullOrEmpty(currentUser.LastName))
                {
                    @: @currentUser.FirstName!
                }
                else
                {
                    @: @User.Identity?.Name!
                }
            </a>
        </li>
        <li class="nav-item">
            <form
                class="form-inline"
                asp-area="Identity"
                asp-page="/Account/Logout"
                asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>