@using Proj.Identity
@model Proj.Models.Task
@inject CurrentUser CurrentUser

<div class="card border-success mb-3">
    <div class="card-header">
        <h3 class="card-title alert-success py-3 px-3 rounded-2">
            <b>@Model.Name</b>
            @if (Model.Label is not null)
            {
                <span class="fs-5">
                    <span class="badge" style="background: @Model.Label.Color;"> </span>
                    <span>@Model.Label.Name</span>
                </span>
            }
        </h3>
        <a href="/projects/@Model.ProjectId/tasks/@Model.Id/edit">Edit</a>
        <div class="d-flex justify-content-between flex-row mt-5">
            <small class="alert-success">
                <b>Starts on: @Model.StartDate.Date.ToShortDateString()</b>
            </small>

            <small class="alert-success">
                <b>Ends on: @Model.EndDate.Date.ToShortDateString()</b>
            </small>
        </div>
    </div>
    <div class="card-body p-3">


        @if (Model.Project.OrganizerId == CurrentUser.Id || CurrentUser.IsAdmin)
        {
            <form method="post" asp-controller="Tasks"
                  asp-action="AssignTask"
                  asp-route-taskId="@Model.Id"
                  asp-route-projectId="@Model.ProjectId">

                <div class="d-flex flex-row justify-content-center p-3 border-1 border-top">
                    <div class="mb-3">
                        <select class="form-select form-control" name="userId" asp-items="Model.ProjectMembers">
                            <option value="">Add a new member to this task</option>
                        </select>

                    </div>
                    <div>
                        <input type="submit" class="btn btn-success alert-success" value="+"/>
                    </div>
                </div>
            </form>
        }


        <div class="card mt-3 mb-3 p-3">
            <div class="card-text">@Html.Raw(Model.Description)</div>
        </div>
        <br/>
        <div class="d-flex align-items-center justify-content-center">
            @if (new string[] { ".png", ".jpeg", ".jpg" }.Any(m => Model.MediaUrl.Contains(m)))
            {
                <img src="@Model.MediaUrl" alt="Embedded image" width="550" height="300"/>
            }
            else if (new string[] { ".mp4", ".mov" }.Any(m => Model.MediaUrl.Contains(m)))
            {
                <video width="550" height="300" controls>
                    <source src="@Model.MediaUrl" type="video/mp4">
                    Your browser does not support the video tag.
                </video>
            }
            else
            {
                @if (!string.IsNullOrEmpty(Model.MediaUrl))
                {
                    var videoId = ExtractYouTubeVideoId(Model.MediaUrl);
                    if (videoId != null)
                    {
                        <iframe width="560" height="315" src="https://www.youtube.com/embed/@videoId" title="YouTube video player"
                                frameborder="0"
                                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                                referrerpolicy="strict-origin-when-cross-origin"
                                allowfullscreen>
                        </iframe>
                    }
                }

                @functions {

                    private string ExtractYouTubeVideoId(string url)
                    {
                        var regex = new System.Text.RegularExpressions.Regex(@"(?:youtube\.com\/(?:[^\/]+\/\S+\/|(?:v|e(?:mbed)?)\/|\S*?[?&]v=)|youtu\.be\/)([a-zA-Z0-9_-]{11})");
                        var match = regex.Match(url);
                        return match.Success ? match.Groups[1].Value : null;
                    }

                }
            }
        </div>

        @*shows comments & form to add comment*@
        <div>
            <h3 class="mb-4 mt-8">Comments</h3>

            @if (!@Model.Comments.Any())
            {
                <p class="text-muted">No comments yet. Be the first to comment!</p>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var comment in @Model.Comments.OrderBy(c => c.CreatedAt))
                    {
                        <li class="list-group-item" id="comment-@comment.Id">
                            <div id="comment-content-@comment.Id" style="display: flex;" class="justify-content-between align-items-start">
                                <div>
                                    <h6 class="mb-1 text-muted">
                                        @comment.User.FirstName @comment.User.LastName
                                        <small>
                                            <i>@comment.User.Email</i>
                                        </small>
                                    </h6>
                                    <p class="mb-1">@comment.Content</p>
                                </div>

                                <div class="d-flex flex-column align-items-end">
                                    <small class="text-muted">@comment.CreatedAt.ToString("g")</small>
                                    @if (comment.UserId == CurrentUser.Id || CurrentUser.IsAdmin)
                                    {
                                        <div class="d-flex flex-row align-items-center justify-content-between">
                                            <button class="btn btn-sm btn-link" onclick="enableEdit('@comment.Id')">Edit</button>

                                            <form
                                                method="post"
                                                asp-controller="Tasks"
                                                asp-action="DeleteComment"
                                                asp-route-projectId="@Model.ProjectId"
                                                asp-route-taskId="@Model.Id"
                                                asp-route-commentId="@comment.Id">
                                                <button type="submit" class="btn btn-sm btn-danger">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">
                                                        <path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"/>
                                                    </svg>
                                                </button>
                                            </form>
                                        </div>
                                    }
                                </div>
                            </div>

                            <div id="comment-edit-@comment.Id" style="display: none;">
                                <form
                                    method="post"
                                    asp-controller="Tasks"
                                    asp-action="EditComment"
                                    asp-route-projectId="@Model.ProjectId"
                                    asp-route-taskId="@Model.Id"
                                    asp-route-commentId="@comment.Id">
                                    <textarea class="form-control mb-2" name="Content" id="edit-input-@comment.Id">@comment.Content</textarea>
                                    <button type="submit" class="btn btn-sm btn-primary">Modify</button>
                                    <button type="button" class="btn btn-sm btn-secondary" onclick="cancelEdit('@comment.Id')">Cancel</button>
                                </form>
                            </div>
                        </li>
                    }
                </ul>
                <br/>
            }

            <vc:comment-form project-id="@Model.ProjectId" task-id="@Model.Id"></vc:comment-form>

        </div>
        <br/>

        @*deletes the task*@
        @if (Model.Project.OrganizerId == CurrentUser.Id || CurrentUser.IsAdmin)
        {
            <div class="card-footer mt-10 float-right">
                <form method="post" asp-controller="Tasks" asp-action="Delete" asp-route-projectId="@Model.ProjectId" asp-route-taskId="@Model.Id">
                    <button type="submit" class="btn btn-sm btn-outline-danger h-50 w-10 p-3 float-right">Remove task</button>
                </form>
            </div>
        }

    </div>
</div>
<script>
    function enableEdit(commentId) {
        document.getElementById(`comment-content-${commentId}`).style.display = "none";
        document.getElementById(`comment-edit-${commentId}`).style.display = 'block';
    }

    function cancelEdit(commentId) {
        document.getElementById(`comment-content-${commentId}`).style.display = 'flex';
        document.getElementById(`comment-edit-${commentId}`).style.display = 'none';
    }
</script>